<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SC</name>
    </assembly>
    <members>
        <member name="T:SC.Diagnostics.StepTimerCallbackDelegate">
            <summary>
            <see cref="T:SC.Diagnostics.StepTimer"/> 클래스에서 역참조하는 대리자 형식을 정의합니다.
            </summary>
        </member>
        <member name="T:SC.Diagnostics.StepTimer">
            <summary>
            경과 시간 및 시물레이션 타이밍을 측정하는 데 사용되는 고해상도 타이머 기능을 제공합니다.
            </summary>
        </member>
        <member name="M:SC.Diagnostics.StepTimer.#ctor">
            <summary>
            <see cref="T:SC.Diagnostics.StepTimer"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:SC.Diagnostics.StepTimer.ToString">
            <summary>
            (<see cref="T:System.Object"/> 클래스에서 상속 됨.) 경과 시간 및 초당 프레임 횟수를 텍스트 형식으로 가져옵니다.
            </summary>
        </member>
        <member name="M:SC.Diagnostics.StepTimer.ResetElapsedTime">
            <summary>
            의도적인 타이밍 중지 후 프레임 시간 경과값을 재설정합니다.
            </summary>
        </member>
        <member name="M:SC.Diagnostics.StepTimer.Tick(SC.Diagnostics.StepTimerCallbackDelegate)">
            <summary>
            타이머 기준 포인트를 설정하고 타이머를 갱신합니다.
            </summary>
            <param name="updateCallback"> 프레임 호출 갱신 함수를 제공합니다. </param>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.ElapsedTicks">
            <summary>
            이전 Tick 함수 호출 이후 경과한 시간을 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.ElapsedSeconds">
            <summary>
            이전 Tick 함수 호출 이후 경과한 시간을 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TotalTicks">
            <summary>
            타이머가 시작된 이후의 총 시간을 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TotalSeconds">
            <summary>
            타이머가 시작된 이후의 총 시간을 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TickCount">
            <summary>
            타이머가 시작된 이후 Tick 함수의 호출 횟수를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TicksPerSecond">
            <summary>
            현재 초당 Tick 함수의 호출 횟수를 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.IsFixedTimeStep">
            <summary>
            타이머가 고정된 시간 비율을 사용하는지 나타내는 값을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TargetElapsedTicks">
            <summary>
            타이머가 고정된 시간 비율을 사용할 때 호출 빈도를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TargetElapsedSeconds">
            <summary> 
            타이머가 고정된 시간 비율을 사용할 때 호출 빈도를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TargetElapsedTicksPerSecond">
            <summary>
            타이머가 고정된 시간 비율을 사용할 때 호출 빈도를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.MaxDeltaTicks">
            <summary>
            프레임 이동 시간 상한을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.MaxDeltaSeconds">
            <summary>
            프레임 이동 시간 상한을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Diagnostics.StepTimer.TicksFrequency">
            <summary>
            정수 형식 시간 값이 초당 나타내는 값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.Drawing.EaseFunction">
            <summary>
            Easing 함수를 계산해 애니메이션 키프레임을 업데이트합니다.
            </summary>
        </member>
        <member name="F:SC.Drawing.EaseFunction.DurationInSeconds">
            <summary>
            함수의 재생 시간을 초단위로 가져옵니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseFunction.Compute(System.Double)">
            <summary>
            함수를 시간값에 기초해 계산합니다.
            </summary>
            <param name="t"> 시간값을 전달받습니다. </param>
            <returns> 결과값을 반환합니다. </returns>
        </member>
        <member name="M:SC.Drawing.EaseFunction.#ctor(System.String,System.Double)">
            <summary>
            <see cref="T:SC.Drawing.EaseFunction"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="functionName"> 함수의 이름을 전달합니다. </param>
            <param name="duration"> 함수의 재생 시간을 전달합니다. </param>
        </member>
        <member name="M:SC.Drawing.EaseFunction.ToString">
            <summary>
            (<see cref="T:System.Object"/> 클래스에서 상속 됨.) 현재 개체의 텍스트 표현을 생성하여 반환합니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseFunction.Update(System.Double)">
            <summary>
            지정된 Easing 함수를 이용해 현재 변환 상태를 갱신합니다.
            </summary>
            <param name="deltaTime"> 시간 이동값을 전달합니다. </param>
        </member>
        <member name="M:SC.Drawing.EaseFunction.FixedUpdate(System.Double)">
            <summary>
            지정된 Easing 함수를 이용해 현재 변환 상태를 갱신합니다. 고정 시간 탐색 위치를 사용합니다.
            </summary>
            <param name="timeSeek"> 고정 시간 위치를 전달합니다. </param>
        </member>
        <member name="M:SC.Drawing.EaseFunction.Start">
            <summary>
            Easing 함수의 보간을 시작합니다. 시간 위치를 시작으로 설정합니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseFunction.Stop">
            <summary>
            Easing 함수의 보간을 종료합니다. 시간 위치를 마지막으로 설정합니다.
            </summary>
        </member>
        <member name="P:SC.Drawing.EaseFunction.IsStart">
            <summary>
            함수의 보간이 시작되었는지 검사합니다.
            </summary>
        </member>
        <member name="P:SC.Drawing.EaseFunction.IsInvert">
            <summary>
            함수의 값을 반전해서 가져옵니다.
            </summary>
        </member>
        <member name="P:SC.Drawing.EaseFunction.CurrentT">
            <summary>
            함수의 보간 위치를 가져옵니다. 0에서 1사이의 값을 가집니다.
            </summary>
        </member>
        <member name="P:SC.Drawing.EaseFunction.CurrentValue">
            <summary>
            함수의 Easing 보간 값을 가져옵니다.
            </summary>
        </member>
        <member name="T:SC.Drawing.EaseIn">
            <summary>
            진입 함수를 사용하는 Easing 함수를 계산합니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseIn.Compute(System.Double)">
            <summary>
            (<see cref="T:SC.Drawing.EaseFunction"/> 클래스에서 상속 됨.) 진입 함수를 사용하여 함수를 계산합니다.
            </summary>
            <param name="t"> 시간값을 전달받습니다. </param>
            <returns> 결과값을 반환합니다. </returns>
        </member>
        <member name="M:SC.Drawing.EaseIn.#ctor(System.Double)">
            <summary>
            <see cref="T:SC.Drawing.EaseIn"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="duration"> 함수의 재생 시간을 전달합니다. </param>
        </member>
        <member name="T:SC.Drawing.EaseInOut">
            <summary>
            진입퇴출 복합 함수를 사용하는 Easing 함수를 계산합니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseInOut.Compute(System.Double)">
            <summary>
            (<see cref="T:SC.Drawing.EaseFunction"/> 클래스에서 상속 됨.) 진입퇴출 복합 함수를 사용하여 함수를 계산합니다.
            </summary>
            <param name="t"> 시간값을 전달받습니다. </param>
            <returns> 결과값을 반환합니다. </returns>
        </member>
        <member name="M:SC.Drawing.EaseInOut.#ctor(System.Double)">
            <summary>
            <see cref="T:SC.Drawing.EaseInOut"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="duration"> 함수의 재생 시간을 전달합니다. </param>
        </member>
        <member name="T:SC.Drawing.EaseLinear">
            <summary>
            선형 보간을 사용하는 Easing 함수를 계산합니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseLinear.Compute(System.Double)">
            <summary>
            (<see cref="T:SC.Drawing.EaseFunction"/> 클래스에서 상속 됨.) 선형 보간을 사용하여 함수를 계산합니다.
            </summary>
            <param name="t"> 시간값을 전달받습니다. </param>
            <returns> 결과값을 반환합니다. </returns>
        </member>
        <member name="M:SC.Drawing.EaseLinear.#ctor(System.Double)">
            <summary>
            <see cref="T:SC.Drawing.EaseLinear"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="duration"> 함수의 재생 시간을 전달합니다. </param>
        </member>
        <member name="T:SC.Drawing.EaseOut">
            <summary>
            퇴출 함수를 사용하는 Easing 함수를 계산합니다.
            </summary>
        </member>
        <member name="M:SC.Drawing.EaseOut.Compute(System.Double)">
            <summary>
            (<see cref="T:SC.Drawing.EaseFunction"/> 클래스에서 상속 됨.) 퇴출 함수를 사용하여 함수를 계산합니다.
            </summary>
            <param name="t"> 시간값을 전달받습니다. </param>
            <returns> 결과값을 반환합니다. </returns>
        </member>
        <member name="M:SC.Drawing.EaseOut.#ctor(System.Double)">
            <summary>
            <see cref="T:SC.Drawing.EaseOut"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="duration"> 함수의 재생 시간을 전달합니다. </param>
        </member>
    </members>
</doc>
